wb = xlsx_package.workbook

# wb = xlsx_package.workbook

# wb.styles permite dar estilos, todo el excel se debe anidar adentro
wb.styles do |style|
  highlight_cell = style.add_style(bg_color: "EFC376")
  header = style.add_style :bg_color => "00", :fg_color => "FF", :height => 30


  #### Hoja Productos ###
  wb.add_worksheet(name: "Productos") do |sheet|
    first_row = ["Tarja", "Fecha", "Lote", "Proovedor", "Color", "Producto", "Secado", "Items",
        "TarjaAnterior", "ColorAnterior", "Peso(kg)", "Fecha ingreso bodega", "Bodega",
        "Banda", "Posicion", "altura", "Fecha salida bodega", "Destino", "Orden de proceso",
        "FxL", "Calibre",
        "Desviacion",# "Aprob/Rech",  # Aqui van los de calidad
         "H%", "Sorbato(ppm)", "Carozo en caja %", "USDA", "Daño total(%)"]

    @damages_list.each do |dam|
      first_row << translate_damage(dam)
    end

    sheet.add_row(first_row, style: header)

    @elements.each do |elem|
      # p "Nuevo elemento!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      # p elem.tag
      row = [elem.tag, elem.created_at, elem.lot, elem.provider , elem.color]
      if elem.product_type
        row << elem.product_type.name
      else
        row << ""
      end

      if elem.drying_method
        row << elem.drying_method.name
      else
        row << ""
      end
      row = row + [first_last_item(elem), elem.ex_tag, elem.previous_color]

      ##############################
      ########### Bodega ###########
      ##############################
      row = row + [elem.weight, elem.stored_at]

      if elem.warehouse
        row << elem.warehouse.name
      else
        row << " "
      end
      row = row + [elem.banda, elem.posicion, elem.altura, elem.dispatched_at,
        elem.destination, elem.process_order]

      ##############################
      ########### Calidad ##########
      ##############################

      ##############################
      ########## CAlibre ##########
      ##############################
      row = row  << elem.samples_average.fruits_per_pound#, "Calibre"]
      row = row  << elem.samples_average.caliber
      row = row  << elem.samples_average.deviation#, "Calibre"]
      ##############################
      ########## Humedad ##########
      ##############################
      row << elem.samples_average.humidity

      ##############################
      ########## Sorbato ##########
      ##############################
      row << elem.samples_average.sorbate

      ##############################
      ########## Carozo ##########
      ##############################
      row << elem.samples_average.carozo_percentage

      ##############################
      ########## Daños ##########
      ##############################

      row << elem.samples_average.usda
      # FIXME que pasa si no tiene muestra de daños???
      # row <<  "-"
      row << elem.samples_average.total_damages_perc

      @damages_list.each do |dam|
        # row << @dam_s.sum(&(dam+"_perc").to_sym) / size
        row << elem.samples_average.send((dam+"_perc").to_sym)
      end

      sheet.add_row (row)
    end
  end

end
